{"title":"TCI implementation","markdown":{"yaml":{"title":"TCI implementation","author":"Jona JOACHIM","date":"2025-08-19","categories":["news","code","analysis"],"bibliography":"references.bib","draft":true},"headingText":"Section","containsRefs":false,"markdown":"\n\nWe try to stick closely to the STANPUMP implementation\nThis is a simple placeholder for the manuscript's main document [@knuth84].\n\n```{python}\n#| echo: false\n\nimport numpy as np\nfrom numpy.polynomial import polynomial as P\n```\n\nThese are the constants from the Gepts model for Sufentanil.\n```{python}\n# Linearity of Pharmacokinetics and Model Estimation of Sufentanil by Gepts et al.\n# DOI: 10.1097/00000542-199512000-00010\n\nVc = 14.3    # L\nk10 = 0.0645 # min⁻¹\nk12 = 0.1086 # min⁻¹\nk13 = 0.0229 # min⁻¹\nk21 = 0.0245 # min⁻¹\nk31 = 0.0013 # min⁻¹\nke0 = 0.112  # min⁻¹\n```\n\nDifferential equations for the 3-compartment model PK system\n\n$\\frac{dA_1}{dt} = A_2 k_{21} + A_3 k_{31} - A_1(k_{10} + k_{12} + k_{13}) + \\text{Infusion}$\n\n$\\frac{dA_2}{dt} = A_1 k_{12} - A_2 k_{21}$\n\n$\\frac{dA_3}{dt} = A_1 k_{13} - A_3 k_{31}$\n\n$\\frac{dC_e}{dt} = k_{e0}\\left(\\frac{A_1}{V_c} - C_e\\right)$\n\nThe system matrix A for the PK system is\n\n$\\mathbf{A} = \\begin{pmatrix}\n-(k_{10} + k_{12} + k_{13}) & k_{21} & k_{31} \\\\\nk_{12} & -k_{21} & 0 \\\\\nk_{13} & 0 & -k_{31}\n\\end{pmatrix}$\n\nWe want to solve the system to obtain an equation of this form:\n\n$$\nC(t) = A_1 e^{-\\lambda_1 t} + A_2 e^{-\\lambda_2 t} + A_3 e^{-\\lambda_3 t}\n$$ {#eq-exponential}\n\n\nFirst, we need to calculate the $\\lambda$ values, which are the eigenvalues for the system.\n\nNumpy does this or us:\n\n```{python}\nA = [\n    [-(k10 + k12 + k13), k21, k31],\n    [k12, -k21, 0],\n    [k13, 0, -k31],\n]\nlambdas = -np.sort(np.linalg.eigvals(A))\nlambdas = np.append(lambdas, ke0)\n\nprint(lambdas)\n```\n\nIn 1990 for STANPUMP, the developers did not have powerful eigenvalues calculators. They needed to derive the eigenvalues manually.\n\nTo find the eigenvalues $\\lambda$, it is required to solve: det($\\lambda$I - A) = 0, I being the identity matrix.\n\n$\\lambda I - A = \\begin{pmatrix}\n\\lambda + (k_{10} + k_{12} + k_{13}) & -k_{21} & -k_{31} \\\\\n-k_{12} & \\lambda + k_{21} & 0 \\\\\n-k_{13} & 0 & \\lambda + k_{31}\n\\end{pmatrix}$\n\nwhich can be simplified to:\n\n$\\lambda³ + \\lambda²(k10+k12+k13+k21+k31) + \\lambda(k10×k31 + k21×k31 + k21×k13 + k10×k21 + k31×k12) + k10×k21×k31$\n\nThe coefficient $a^n$ for $\\lambda^n$ are:\n\n```\na0 = k10 * k21 * k31\na1 = k10 * k31 + k21 * k31 + k21 * k13 + k10 * k21 + k31 * k12\na2 = k10 + k12 + k13 + k21 + k31\n```\n\n\nNext we need to calculate the roots for these polynomials.\nThis involves solving a cubic polynomial.\nIn 1990, there probably weren't any open source off the shelf polynomial solvers available.\nHowever the C standard mathematics library already had trigonometric functions.\nThey used Cardano's method with involving trigonometrics.\n\n```C\na0 = k10 * k21 * k31;\na1 = k10 * k31 + k21 * k31 + k21 * k13 + k10 * k21 + k31 * k12;\na2 = k10 + k12 + k13 + k21 + k31;\n\n/* now transform to x^3 + px + q = 0 (depressed cubic) */\np = a1 - (a2 * a2 / 3.0);\nq = (2 * a2 * a2 * a2 / 27.0) - (a1 * a2 / 3.0) + a0;\n\nr1 = sqrt(-(p * p * p) / 27.0);\nphi = (-q / 2.0) / r1;\n/* Clamp phi to valid range for acos */\nif (phi > 1)\n    phi = 1;\nelse if (phi < -1)\n    phi = -1;\nphi = (acos(phi) / 3.0);\nr1 = 2.0 * exp(log(r1) / 3.0);\n\n/* Calculate the three roots */\nr[1] = -(cos(phi) * r1 - a2 / 3.0);\nr[2] = -(cos(phi + 120.0 * toradian) * r1 - a2 / 3.0);\nr[3] = -(cos(phi + 240.0 * toradian) * r1 - a2 / 3.0);\n```\n\nTo take into account the infusion in @eq-exponential\n\n$-I \\frac{1-e^{-10s}}{s} - A_1(0) = -(k_1 + s)\\hat{A}_1(s) + k_{21}\\hat{A}_2(s) + k_{31}\\hat{A}_3(s)$\n\n$-A_i(0) = k_{1i}\\hat{A}_1(s) - (k_{i1} + s)\\hat{A}_i(s)$","srcMarkdownNoYaml":"\n\n## Section\nWe try to stick closely to the STANPUMP implementation\nThis is a simple placeholder for the manuscript's main document [@knuth84].\n\n```{python}\n#| echo: false\n\nimport numpy as np\nfrom numpy.polynomial import polynomial as P\n```\n\nThese are the constants from the Gepts model for Sufentanil.\n```{python}\n# Linearity of Pharmacokinetics and Model Estimation of Sufentanil by Gepts et al.\n# DOI: 10.1097/00000542-199512000-00010\n\nVc = 14.3    # L\nk10 = 0.0645 # min⁻¹\nk12 = 0.1086 # min⁻¹\nk13 = 0.0229 # min⁻¹\nk21 = 0.0245 # min⁻¹\nk31 = 0.0013 # min⁻¹\nke0 = 0.112  # min⁻¹\n```\n\nDifferential equations for the 3-compartment model PK system\n\n$\\frac{dA_1}{dt} = A_2 k_{21} + A_3 k_{31} - A_1(k_{10} + k_{12} + k_{13}) + \\text{Infusion}$\n\n$\\frac{dA_2}{dt} = A_1 k_{12} - A_2 k_{21}$\n\n$\\frac{dA_3}{dt} = A_1 k_{13} - A_3 k_{31}$\n\n$\\frac{dC_e}{dt} = k_{e0}\\left(\\frac{A_1}{V_c} - C_e\\right)$\n\nThe system matrix A for the PK system is\n\n$\\mathbf{A} = \\begin{pmatrix}\n-(k_{10} + k_{12} + k_{13}) & k_{21} & k_{31} \\\\\nk_{12} & -k_{21} & 0 \\\\\nk_{13} & 0 & -k_{31}\n\\end{pmatrix}$\n\nWe want to solve the system to obtain an equation of this form:\n\n$$\nC(t) = A_1 e^{-\\lambda_1 t} + A_2 e^{-\\lambda_2 t} + A_3 e^{-\\lambda_3 t}\n$$ {#eq-exponential}\n\n\nFirst, we need to calculate the $\\lambda$ values, which are the eigenvalues for the system.\n\nNumpy does this or us:\n\n```{python}\nA = [\n    [-(k10 + k12 + k13), k21, k31],\n    [k12, -k21, 0],\n    [k13, 0, -k31],\n]\nlambdas = -np.sort(np.linalg.eigvals(A))\nlambdas = np.append(lambdas, ke0)\n\nprint(lambdas)\n```\n\nIn 1990 for STANPUMP, the developers did not have powerful eigenvalues calculators. They needed to derive the eigenvalues manually.\n\nTo find the eigenvalues $\\lambda$, it is required to solve: det($\\lambda$I - A) = 0, I being the identity matrix.\n\n$\\lambda I - A = \\begin{pmatrix}\n\\lambda + (k_{10} + k_{12} + k_{13}) & -k_{21} & -k_{31} \\\\\n-k_{12} & \\lambda + k_{21} & 0 \\\\\n-k_{13} & 0 & \\lambda + k_{31}\n\\end{pmatrix}$\n\nwhich can be simplified to:\n\n$\\lambda³ + \\lambda²(k10+k12+k13+k21+k31) + \\lambda(k10×k31 + k21×k31 + k21×k13 + k10×k21 + k31×k12) + k10×k21×k31$\n\nThe coefficient $a^n$ for $\\lambda^n$ are:\n\n```\na0 = k10 * k21 * k31\na1 = k10 * k31 + k21 * k31 + k21 * k13 + k10 * k21 + k31 * k12\na2 = k10 + k12 + k13 + k21 + k31\n```\n\n\nNext we need to calculate the roots for these polynomials.\nThis involves solving a cubic polynomial.\nIn 1990, there probably weren't any open source off the shelf polynomial solvers available.\nHowever the C standard mathematics library already had trigonometric functions.\nThey used Cardano's method with involving trigonometrics.\n\n```C\na0 = k10 * k21 * k31;\na1 = k10 * k31 + k21 * k31 + k21 * k13 + k10 * k21 + k31 * k12;\na2 = k10 + k12 + k13 + k21 + k31;\n\n/* now transform to x^3 + px + q = 0 (depressed cubic) */\np = a1 - (a2 * a2 / 3.0);\nq = (2 * a2 * a2 * a2 / 27.0) - (a1 * a2 / 3.0) + a0;\n\nr1 = sqrt(-(p * p * p) / 27.0);\nphi = (-q / 2.0) / r1;\n/* Clamp phi to valid range for acos */\nif (phi > 1)\n    phi = 1;\nelse if (phi < -1)\n    phi = -1;\nphi = (acos(phi) / 3.0);\nr1 = 2.0 * exp(log(r1) / 3.0);\n\n/* Calculate the three roots */\nr[1] = -(cos(phi) * r1 - a2 / 3.0);\nr[2] = -(cos(phi + 120.0 * toradian) * r1 - a2 / 3.0);\nr[3] = -(cos(phi + 240.0 * toradian) * r1 - a2 / 3.0);\n```\n\nTo take into account the infusion in @eq-exponential\n\n$-I \\frac{1-e^{-10s}}{s} - A_1(0) = -(k_1 + s)\\hat{A}_1(s) + k_{21}\\hat{A}_2(s) + k_{31}\\hat{A}_3(s)$\n\n$-A_i(0) = k_{1i}\\hat{A}_1(s) - (k_{i1} + s)\\hat{A}_i(s)$"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.33","theme":{"light":"flatly","dark":"slate"},"title-block-banner":true,"title":"TCI implementation","author":"Jona JOACHIM","date":"2025-08-19","categories":["news","code","analysis"],"bibliography":["references.bib"],"draft":true},"extensions":{"book":{"multiFile":true}}}},"draft":true,"projectFormats":["html"]}