<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>blog</title>
<link>https://jaj42.github.io/blog/</link>
<atom:link href="https://jaj42.github.io/blog/index.xml" rel="self" type="application/rss+xml"/>
<description>Some things I want to share</description>
<generator>quarto-1.7.31</generator>
<lastBuildDate>Mon, 18 Aug 2025 22:00:00 GMT</lastBuildDate>
<item>
  <title>Deep dive into STANPUMP</title>
  <dc:creator>Jona JOACHIM</dc:creator>
  <link>https://jaj42.github.io/blog/posts/202508_stanpump/</link>
  <description><![CDATA[ 






<section id="pharmacometrics-tci-and-stanpump" class="level2">
<h2 class="anchored" data-anchor-id="pharmacometrics-tci-and-stanpump">Pharmacometrics, TCI and STANPUMP</h2>
<p>Target Controlled Infusion (TCI) is a technique that uses real-time algorithms to control drug infusions. The goal is to quickly and safely achieve the desired drug concentration in a patient’s blood or at the drug’s effect site, without overshooting the target. While TCI can be used beyond anesthesia, it has found its widest application in perioperative settings, where anesthesia-related drugs are infused to maintain stable sedation during total intravenous anesthesia (TIVA).</p>
<p>TCI relies on pharmacometric models called PKPD models (pharmacokinetic-pharmacodynamic models). These models describe how drugs move through and are processed by the body (pharmacokinetics) and how they affect the body (pharmacodynamics). Although the effect is typically sedation level, this isn’t always the case.</p>
<p>Since TCI’s first uses in the 1980s<span class="citation" data-cites="struys_history_2016"><sup>1</sup></span>, significant effort has been invested in developing new PKPD models. Today, these models are available for nearly every drug used in anesthesia. Extensive literature exists on PKPD models and their design, along with various software options for building and fitting these models. NONMEM is the best-known software, but many alternatives are available, including open-source options like nlmixr2<span class="citation" data-cites="nlmixr"><sup>2</sup></span>.</p>
<p>Most PKPD models for anesthesia are compartmental models with three compartments, where Cc typically represents the concentration of drug in the plasma. Additionally, Ce represents the concentration in the “effect compartment,” which drives the drug’s effect.</p>
<p>However, implementing new models to give clinical insight requires integrating them into TCI systems. Currently, few TCI systems are available, and most are proprietary and closed-source. The algorithms used for TCI, which must inverse PKPD models, are not well documented. The only open-source TCI system I’m aware of is <a href="https://opentci.org/code/stanpump">STANPUMP</a> from the 1990s. In this blog post, I’ll take a deep dive into the STANPUMP source code to understand the underlying algorithms and explore implementing them in a modern way. My aim is to understand these algorithms and create a minimal open-source implementation as a foundation for future work.</p>
</section>
<section id="mathematics" class="level2">
<h2 class="anchored" data-anchor-id="mathematics">Mathematics</h2>
<p>PKPD models can be described by a set of ordinary differential equations (ODE) with one equation per compartment. In anesthesia, most drugs follow a 3-compartment model with can be mathematically described as follows:</p>
<p><img src="https://jaj42.github.io/blog/posts/202508_stanpump/Screenshot_20250819_135400.png" class="img-fluid"></p>
<p><span id="eq-ode"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bequation%7D%0A%5Cbegin%7Baligned%7D%0A%5Cfrac%7BdA_1%7D%7Bdt%7D%20&amp;%20=%20A_2%20k_%7B21%7D%20+%20A_3%20k_%7B31%7D%20-%20A_1(k_%7B10%7D%20+%20k_%7B12%7D%20+%20k_%7B13%7D)%20+%20%5Ctext%7BInfusion%7D%20%5C%5C%0A%5Cfrac%7BdA_2%7D%7Bdt%7D%20&amp;%20=%20A_1%20k_%7B12%7D%20-%20A_2%20k_%7B21%7D%20%5C%5C%0A%5Cfrac%7BdA_3%7D%7Bdt%7D%20&amp;%20=%20A_1%20k_%7B13%7D%20-%20A_3%20k_%7B31%7D%20%5C%5C%0A%5Cfrac%7BdC_e%7D%7Bdt%7D%20&amp;%20=%20k_%7Be0%7D%5Cleft(%5Cfrac%7BA_1%7D%7BV_c%7D%20-%20C_e%5Cright)%0A%5Cend%7Baligned%7D%0A%5Cend%7Bequation%7D%0A%5Ctag%7B1%7D"></span></p>
<p><img src="https://latex.codecogs.com/png.latex?A_n"> is the amount of drug in compartment <img src="https://latex.codecogs.com/png.latex?n">, <img src="https://latex.codecogs.com/png.latex?k_ij"> is the rate constant which describes the speed with which the drug moves from compartement <img src="https://latex.codecogs.com/png.latex?i"> to compartment <img src="https://latex.codecogs.com/png.latex?j">. This is not Fick’s laws of diffusion because diffusion is driven by concentration, not by drug amount. It took me some time to understand that we are talking about the drug amount, not the concentration. This was difficult to understand especially since there is an exception for the effect site compartment <img src="https://latex.codecogs.com/png.latex?Ce"> where the rate constant <img src="https://latex.codecogs.com/png.latex?k_e0"> drives directly concentration. Once, the effect site compartment was treated as a regular compartment (with <img src="https://latex.codecogs.com/png.latex?k_14"> and <img src="https://latex.codecogs.com/png.latex?k_41"> rate constants). However, nowadays it is treated as a special compartment with zero volume and a single rate constant <img src="https://latex.codecogs.com/png.latex?k_e0"> (= <img src="https://latex.codecogs.com/png.latex?k_41">) and <img src="https://latex.codecogs.com/png.latex?k_14"> is zero. Since the volume is zero, no drug actually moves to the compartment and it is driven by concentration. The plasma concentration <img src="https://latex.codecogs.com/png.latex?Cc"> is obtained by dividing the amount in the central compartment <img src="https://latex.codecogs.com/png.latex?A_1"> by <img src="https://latex.codecogs.com/png.latex?Vc">, the volume of the central compartment.</p>
<p>If we leave aside the infusion term for one moment, we can write the equations in matrix form as</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7BdA%7D%7Bdt%7D%20=%20S%20%5Ccdot%20A%5ET"></p>
<p>Where <img src="https://latex.codecogs.com/png.latex?A"> is the vector <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Bpmatrix%7D%20A_1%20&amp;%20A_2%20&amp;%20A_3%20%5Cend%7Bpmatrix%7D"> and S is the system matrix.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7BS%7D%20=%20%5Cbegin%7Bpmatrix%7D%0A-(k_%7B10%7D%20+%20k_%7B12%7D%20+%20k_%7B13%7D)%20&amp;%20k_%7B21%7D%20&amp;%20k_%7B31%7D%20%5C%5C%0Ak_%7B12%7D%20&amp;%20-k_%7B21%7D%20&amp;%200%20%5C%5C%0Ak_%7B13%7D%20&amp;%200%20&amp;%20-k_%7B31%7D%0A%5Cend%7Bpmatrix%7D%0A"></p>
<p>This expression can be integrated to obtain the following closed form expression:</p>
<p><span id="eq-exponential"><img src="https://latex.codecogs.com/png.latex?%0ACc(t)%20=%20A_1%20e%5E%7B-%5Clambda_1%20t%7D%20+%20A_2%20e%5E%7B-%5Clambda_2%20t%7D%20+%20A_3%20e%5E%7B-%5Clambda_3%20t%7D%0A%5Ctag%7B2%7D"></span></p>
<p>You will also find it writtin as:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0ACc(t)%20=%20A%20e%5E%7B-%5Calpha%20t%7D%20+%20B%20e%5E%7B-%5Cbeta%20t%7D%20+%20C%20e%5E%7B-%5Cgamma%20t%7D%0A"></p>
<p>To obtain this expression, we need to calculate the exponential decay constants <img src="https://latex.codecogs.com/png.latex?%5Clambda">, which are the eigenvalues of the system.</p>
<p>However, this equation does not account for infusion, it describes the clearance from plasma starting from an initial value <img src="https://latex.codecogs.com/png.latex?A">.</p>
<p>If we want to solve the ODE system while taking into account the infusion term <img src="https://latex.codecogs.com/png.latex?J">, the equation becomes more complicated<span class="citation" data-cites="shafer_algorithms_1992"><sup>3</sup></span>,<span class="citation" data-cites="bailey_simple_1991"><sup>4</sup></span>. This equation introduces coefficients <img src="https://latex.codecogs.com/png.latex?c"> which are outlined below.</p>
<p><img src="https://latex.codecogs.com/png.latex?Cc%20=%20%5Csum_%7Bn%7D%20A_n%20e%5E%7B-%5Clambda_n%20dt%7D%20+%20c%5Ep_n%20J%20(1%20-%20e%5E%7B-%5Clambda_n%20dt%7D)"></p>
<p>The equation can also be written for the effect site concentration:</p>
<p><img src="https://latex.codecogs.com/png.latex?Ce%20=%20%5Csum_%7Bn%7D%20A_n%20e%5E%7B-%5Clambda_n%20dt%7D%20+%20c%5Ee_n%20J%20(1%20-%20e%5E%7B-%5Clambda_n%20dt%7D)"></p>
<p>In this case, the vector A contains a fourth term for the effect compartment, <img src="https://latex.codecogs.com/png.latex?k_e0"> is added as a fourth term to <img src="https://latex.codecogs.com/png.latex?%5Clambda"> and different coefficients <img src="https://latex.codecogs.com/png.latex?c_e"> are used.</p>
<p>These formulas are valid for constant infusion rate <img src="https://latex.codecogs.com/png.latex?J">. If the infusion rate is changed, the solution can be calculated up to the last value during the previous infusion rate and this solution can be used as an initial state <img src="https://latex.codecogs.com/png.latex?A"> in the new formula with new rate constant.</p>
<section id="pharmacokinetic-coefficient" class="level3">
<h3 class="anchored" data-anchor-id="pharmacokinetic-coefficient">Pharmacokinetic Coefficient</h3>
<p>This is the most frustrating part for me. I copied these coefficients from STANPUMP, but I don’t understand how to derive them mathematically. According to the literature, the derivation involves several complex steps: applying the Laplace transform<span class="citation" data-cites="shafer_algorithms_1992"><sup>3</sup></span> to Equation&nbsp;1, performing calculations in the Laplace domain, simplifying the expression using partial fraction decomposition, and then applying the inverse Laplace transform. Unfortunately, this level of mathematics is beyond my current understanding. I would be grateful if someone could explain how these coefficients are actually derived.</p>
<section id="three-compartment-model" class="level4">
<h4 class="anchored" data-anchor-id="three-compartment-model">Three Compartment Model</h4>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bequation%7D%0A%5Cbegin%7Baligned%7D%0Ac%5Ep_1%20&amp;%20=%20%5Cfrac%7B(k_%7B21%7D%20-%20%5Clambda_1)(k_%7B31%7D%20-%20%5Clambda_1)%7D%7B(%5Clambda_1%20-%20%5Clambda_2)(%5Clambda_1%20-%20%5Clambda_3)%20%5Ccdot%20V_c%20%5Ccdot%20%5Clambda_1%7D%0A%5C%5C%0Ac%5Ep_2%20&amp;%20=%20%5Cfrac%7B(k_%7B21%7D%20-%20%5Clambda_2)(k_%7B31%7D%20-%20%5Clambda_2)%7D%7B(%5Clambda_2%20-%20%5Clambda_1)(%5Clambda_2%20-%20%5Clambda_3)%20%5Ccdot%20V_c%20%5Ccdot%20%5Clambda_2%7D%0A%5C%5C%0Ac%5Ep_3%20&amp;%20=%20%5Cfrac%7B(k_%7B21%7D%20-%20%5Clambda_3)(k_%7B31%7D%20-%20%5Clambda_3)%7D%7B(%5Clambda_3%20-%20%5Clambda_2)(%5Clambda_3%20-%20%5Clambda_1)%20%5Ccdot%20V_c%20%5Ccdot%20%5Clambda_3%7D%0A%5C%5C%0Ac%5Ee_1%20&amp;%20=%20c%5Ep_1%20%5Ccdot%20%5Cfrac%7Bk_%7Be0%7D%7D%7Bk_%7Be0%7D%20-%20%5Clambda_1%7D%0A%5C%5C%0Ac%5Ee_2%20&amp;%20=%20c%5Ep_2%20%5Ccdot%20%5Cfrac%7Bk_%7Be0%7D%7D%7Bk_%7Be0%7D%20-%20%5Clambda_2%7D%0A%5C%5C%0Ac%5Ee_3%20&amp;%20=%20c%5Ep_3%20%5Ccdot%20%5Cfrac%7Bk_%7Be0%7D%7D%7Bk_%7Be0%7D%20-%20%5Clambda_3%7D%0A%5C%5C%0Ac%5Ee_4%20&amp;%20=%20%5Cfrac%7B(k_%7Be0%7D%20-%20k_%7B21%7D)(k_%7Be0%7D%20-%20k_%7B31%7D)%7D%7B(%5Clambda_1%20-%20k_%7Be0%7D)(%5Clambda_2%20-%20k_%7Be0%7D)(%5Clambda_3%20-%20k_%7Be0%7D)%20%5Ccdot%20V_c%7D%0A%5Cend%7Baligned%7D%0A%5Cend%7Bequation%7D%0A"></p>
</section>
</section>
<section id="two-compartment-model" class="level3">
<h3 class="anchored" data-anchor-id="two-compartment-model">Two Compartment Model</h3>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bequation%7D%0A%5Cbegin%7Baligned%7D%0Ac%5Ep_1%20&amp;%20=%20%5Cfrac%7Bk_%7B21%7D%20-%20%5Clambda_1%7D%7B(%5Clambda_2%20-%20%5Clambda_1)%20%5Ccdot%20V_c%20%5Ccdot%20%5Clambda_1%7D%0A%5C%5C%0Ac%5Ep_2%20&amp;%20=%20%5Cfrac%7Bk_%7B21%7D%20-%20%5Clambda_2%7D%7B(%5Clambda_1%20-%20%5Clambda_2)%20%5Ccdot%20V_c%20%5Ccdot%20%5Clambda_2%7D%0A%5C%5C%0Ac%5Ee_1%20&amp;%20=%20c%5Ep_1%20%5Ccdot%20%5Cfrac%7Bk_%7Be0%7D%7D%7Bk_%7Be0%7D%20-%20%5Clambda_1%7D%0A%5C%5C%0Ac%5Ee_2%20&amp;%20=%20c%5Ep_2%20%5Ccdot%20%5Cfrac%7Bk_%7Be0%7D%7D%7Bk_%7Be0%7D%20-%20%5Clambda_2%7D%0A%5C%5C%0Ac%5Ee_3%20&amp;%20=%20%5Cfrac%7Bk_%7B21%7D%20-%20k_%7Be0%7D%7D%7B(%5Clambda_1%20-%20k_%7Be0%7D)(%5Clambda_2%20-%20k_%7Be0%7D)%20%5Ccdot%20V_c%7D%0A%5Cend%7Baligned%7D%0A%5Cend%7Bequation%7D%0A"></p>
</section>
<section id="one-compartment-model" class="level3">
<h3 class="anchored" data-anchor-id="one-compartment-model">One Compartment Model</h3>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bequation%7D%0A%5Cbegin%7Baligned%7D%0Ac%5Ep_1%20&amp;%20=%20%5Cfrac%7B1%7D%7B%5Clambda_1%20%5Ccdot%20V_c%7D%0A%5C%5C%0Ae%5Ep_2%20&amp;%20=%20c%5Ep_1%20%5Ccdot%20%5Cfrac%7Bk_%7Be0%7D%7D%7Bk_%7Be0%7D%20-%20%5Clambda_1%7D%0A%5C%5C%0Ae%5Ep_1%20&amp;%20=%20%5Cfrac%7B1%7D%7B(%5Clambda_1%20-%20k_%7Be0%7D)%20%5Ccdot%20V_c%7D%0A%5Cend%7Baligned%7D%0A%5Cend%7Bequation%7D%0A"></p>
</section>
</section>
<section id="source-code" class="level2">
<h2 class="anchored" data-anchor-id="source-code">Source code</h2>
<p>Steven L. Shafer, one of the pioneers of TCI, wrote the original STANPUMP source code. From the beginning, Shafer intended for this software to be open source—a valuable contribution to the community. Later, Charles Minto established the Open TCI website, which serves as a repository for models and software related to PKPD and TCI. The latest version of STANPUMP is available at: <a href="https://opentci.org/code/stanpump">https://opentci.org/code/stanpump</a>.</p>
<section id="bit-real-mode-msdos" class="level3">
<h3 class="anchored" data-anchor-id="bit-real-mode-msdos">16-bit real mode MSDOS</h3>
<p>STANPUMP was written for the MSDOS operating system, running on x86 systems in “real mode”. In real mode, program address physical memory directly with a maximum of 1 MB adressable memory. There is no memory protection and any memory location can be read and written by any program. The program interacts directly with the hardware through interrupts. This can for example be seen in the STANPUMP code which interacts with the keyboard or renders text on the screen.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb1-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define INT09   </span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x0009</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">      </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* Keyboard interrupt number           */</span></span>
<span id="cb1-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define INT1B   </span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x001B</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">      </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* Ctrl-C interrupt number             */</span></span>
<span id="cb1-3"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define INT23   </span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x0023</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">      </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* Ctrl-Break interrupt number         */</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> set_keyboard<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb1-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-7">       OldInt09 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _dos_getvect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> INT09 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-8">       OldInt1B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _dos_getvect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> INT1B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-9">       OldInt23 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _dos_getvect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> INT23 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-10"></span>
<span id="cb1-11">       KbdPtr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Int09<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-12">       _dos_setvect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> INT09<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> KbdPtr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-13"></span>
<span id="cb1-14">       BrkPtr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Int1B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-15">       _dos_setvect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> INT1B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> BrkPtr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-16"></span>
<span id="cb1-17">       BrkPtr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Int23<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-18">       _dos_setvect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> INT23<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> BrkPtr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-19"></span>
<span id="cb1-20">       KbdCtrl  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ADDRESS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> KBDFLAG<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-21">       keyboard_reset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-23"></span>
<span id="cb1-24"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> gotoxy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-25"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-26">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* gotoxy */</span></span>
<span id="cb1-27">    REGS ir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> or<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-28">    ir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-29">    ir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-30">    ir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>ah <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-31">    ir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>bh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-32">    int86<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>ir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>or<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-33">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* gotoxy */</span></span></code></pre></div>
</section>
<section id="kr-vs.-ansi-c" class="level3">
<h3 class="anchored" data-anchor-id="kr-vs.-ansi-c">K&amp;R vs.&nbsp;ANSI C</h3>
<p>STANPUMP was written in the now obsolete K&amp;R style which was published in 1978 by Brian Kernighan and Dennis Ritchie.</p>
<p>This is mostly visible in the function prototypes, for example:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb2-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> cube<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>k10<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>k12<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>k21<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>k13<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>k31<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> k10<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k12<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k21<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k13<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k31<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* cube */</span></span>
<span id="cb2-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* function code */</span></span>
<span id="cb2-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* cube */</span></span></code></pre></div>
<p>This is the modern ANSI C equivalent of this prototype:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb3-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> cube<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> k10<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> k12<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> k21<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> k13<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> k31<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span></code></pre></div>
</section>
<section id="memory-allocations" class="level3">
<h3 class="anchored" data-anchor-id="memory-allocations">Memory allocations</h3>
<p>STANPUMP was designed to run on systems with severe memory constraints. The developers avoided heap allocation because it was unreliable on MS-DOS systems. Instead, they statically allocated all variables and shared program state through global variables. While global variables are discouraged in modern programming because they make it difficult to track program state and predict how functions interact, this approach was practical given the hardware limitations of the time. Despite these constraints, STANPUMP’s developers made several clever design choices to minimize memory and CPU usage. Their deep understanding of the underlying algorithms allowed them to precalculate certain values for later reuse, demonstrating sophisticated optimization techniques. One notable example is their introduction of “unit disposition functions” (UDFs).</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* calculate udf, plasma concentration, for an infusion of 1/second */</span></span>
<span id="cb4-2">p_udf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">199</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb4-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-5">    temp1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> l1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p_coef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> l1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-6">    temp2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> l2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p_coef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> l2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-7">    temp3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> l3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p_coef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> l3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-8">    p_udf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> temp2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> temp3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>UDFs represent the step response of the model and are calculated for both plasma concentration and effect site concentration. They show how the model responds to a constant infusion of 1 unit of drug per second. This calculation is performed once and stored in memory, then the response vector can be scaled according to the actual infusion rate.</p>
</section>
<section id="calculation-of-eigenvalues" class="level3">
<h3 class="anchored" data-anchor-id="calculation-of-eigenvalues">Calculation of Eigenvalues</h3>
<p>STANPUMP uses closed-form solutions of the PKPD differential equations to improve calculation efficiency. These solutions have been derived and published by the authors and others<span class="citation" data-cites="shafer_algorithms_1992"><sup>3</sup></span>,<span class="citation" data-cites="bailey_simple_1991"><sup>4</sup></span>. To obtain these equations, the eigenvalues of the PKPD model must be calculated. In the early 1990s, mathematics libraries for eigenvalue calculations were not widely available, so the developers had to implement this manually. This calculation is handled in the CUBE.C source file. The process begins by calculating the determinant of the system matrix and expressing it as a depressed cubic equation: x³ + px + q = 0. Since off-the-shelf cubic equation solvers weren’t available in C during the 1990s, the authors implemented Girolamo Cardano’s 16th-century trigonometric solution to solve this equation and derive the eigenvalues. This approach was practical because trigonometric functions had been part of the C standard library since 1978 and were extended in 1989.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb5-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> cube<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>k10<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>k12<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>k21<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>k13<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>k31<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> k10<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k12<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k21<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k13<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k31<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* cube */</span></span>
<span id="cb5-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> a0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* factors in cubic equation */</span></span>
<span id="cb5-6">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* factors in transformed equation */</span></span>
<span id="cb5-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> phi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* used for root solving */</span></span>
<span id="cb5-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> r1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* also used for root solving */</span></span>
<span id="cb5-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> toradian<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* mathematical conversion from degrees to radians */</span></span>
<span id="cb5-10"></span>
<span id="cb5-11">    toradian <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> asin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">180.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* pi/180 */</span></span>
<span id="cb5-12"></span>
<span id="cb5-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>k31 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-15">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* first take roots of X^3 + a2X^2 + a1X^1 + a0 = 0 */</span></span>
<span id="cb5-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* where the coefficients are : */</span></span>
<span id="cb5-17">        a0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> k10 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> k21 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> k31<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-18">        a1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> k10 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> k31 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> k21 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> k31 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> k21 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> k13 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> k10 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> k21 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> k31 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> k12<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-19">        a2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> k10 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> k12 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> k13 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> k21 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> k31<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-20"></span>
<span id="cb5-21">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* now transform to x^3 + px + q = 0 */</span></span>
<span id="cb5-22">        p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> a2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-23">        q <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> a2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> a2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> a2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">27.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> a2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> a0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-24">        r1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sqrt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-(</span>p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">27.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-25">        phi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span>q <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> r1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-26">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>phi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-27">            phi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-28">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>phi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-29">            phi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-30">        phi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>acos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>phi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-31">        r1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> exp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>log<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>r1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-32">        r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-(</span>cos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>phi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> r1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> a2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-33">        r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-(</span>cos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>phi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">120.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> toradian<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> r1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> a2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-34">        r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-(</span>cos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>phi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">240.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> toradian<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> r1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> a2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-35">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb5-37">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-38">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>k21 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-39">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-40">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* first take roots of X^2 - a1X^1 + a0 = 0 */</span></span>
<span id="cb5-41">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* where the coefficients are : */</span></span>
<span id="cb5-42">            a0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> k10 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> k21<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-43">            a1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-(</span>k10 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> k12 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> k21<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-44">            r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span>a1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sqrt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> a1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> a0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-45">            r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span>a1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> sqrt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> a1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> a0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-46">            r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-47">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-48">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb5-49">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-50">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* one compartment model */</span></span>
<span id="cb5-51">            r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> k10<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-52">            r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-53">            r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-54">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-55">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-56"></span>
<span id="cb5-57">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* sort - nothing fancy is needed */</span></span>
<span id="cb5-58">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span></span>
<span id="cb5-59">        swap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb5-60">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span></span>
<span id="cb5-61">        swap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb5-62">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span></span>
<span id="cb5-63">        swap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb5-64">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* cube */</span></span></code></pre></div>
</section>
<section id="core-algorithm" class="level3">
<h3 class="anchored" data-anchor-id="core-algorithm">Core algorithm</h3>
<p>To study the algorithm, I extracted the core functions, converted them to ANSI C, and created a minimal C program to run the algorithm. The source code for this project is available at: <a href="https://framagit.org/jaj/ministan/-/tree/main/c" class="uri">https://framagit.org/jaj/ministan/-/tree/main/c</a> I considered it essential to run the original STANPUMP code as a reference implementation. When algorithms are re-implemented, small errors can easily creep in and may be difficult to detect. Using the original STANPUMP as a control allows us to verify that our code produces correct output. In my adaptation, I moved all global variables into a struct called Config to serve as a centralized state container.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* cube.c */</span></span>
<span id="cb6-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> cube<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> k10<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> k12<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> k21<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> k13<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> k31<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-3">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-4"></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* udfs.c */</span></span>
<span id="cb6-6"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> calculate_udfs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>cfg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-7"></span>
<span id="cb6-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* virtual_model.c */</span></span>
<span id="cb6-9"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> virtual_model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>cfg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> vm1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> vm2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> vm3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-10">                     <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> vm4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> flag<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-11"></span>
<span id="cb6-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* find_peak.c */</span></span>
<span id="cb6-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> find_peak<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>cfg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> current_time<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> temp1e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-14">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> temp2e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> temp3e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> temp4e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-15"></span>
<span id="cb6-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* model.c */</span></span>
<span id="cb6-17"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>cfg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> temp1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> temp2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> temp3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-18">             <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> temp1e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> temp2e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> temp3e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> temp4e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-19">             <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> desired<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span></code></pre></div>
<p>The cube() function was already discussed above. It calculates eigenvalues of the PK system which are widely used later in the code.</p>
<p>The calculate_udfs() function calculates the “unit disposition functions” (UDF). A 10 second infusion is simulated at constant (unit) rate. Then the model is run until the model is run without infusion to see when the concentration peaks (peak_time). The peak_time (also called time to peak effect TTPE) is a caracteristic of the model. It is used later in the model() function. The calculate_udfs() function also calculates the <img src="https://latex.codecogs.com/png.latex?c%5Ep"> and <img src="https://latex.codecogs.com/png.latex?c%5Ee"> coefficients.</p>
<p>The virtual_model() function runs the model without infusion rate for a specified time. This is useful to estimate where the concentrations are heading and to evaluate how rate needs to be adjusted.</p>
<p>find_peak() is a hill climbing algorithm to find out when concentration will peak given the current infusion rate.</p>
<p>The model() function is the main function of the algorithm. It orchestrates the other functions to find the optimal infusion rate for the given target.</p>
</section>
</section>
<section id="reimplementation-in-python" class="level2">
<h2 class="anchored" data-anchor-id="reimplementation-in-python">Reimplementation in Python</h2>
<p>STANPUMP represents a remarkable combination of deep TCI algorithm knowledge and programming expertise. The authors derived mathematical solutions themselves to optimize performance and employed coding techniques that enabled real-time execution on very basic hardware. With over 10 years of clinical use, the software’s algorithms are thoroughly proven in practice. To experiment with the code and test it with my own models, I decided to reimplement it in Python. I began with a <a href="https://framagit.org/jaj/ministan/-/blob/main/python/ministan.py">1:1 translation</a> of the C code, then gradually modernized sections using contemporary approaches like array programming with NumPy<span class="citation" data-cites="harris2020array"><sup>5</sup></span>.</p>
<p>For example, the calculation of the eigenvalues is straightforward with NumPy:</p>
<div id="877de2c5" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb7-2">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb7-3">    [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(k10 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> k12 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> k13), k21, k31],</span>
<span id="cb7-4">    [k12, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>k21, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb7-5">    [k13, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>k31],</span>
<span id="cb7-6">]</span>
<span id="cb7-7">lambdas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.eigvals(A)</span></code></pre></div>
</div>
<p>Some algorithms could probably be replaced by highly optimized functions from the SciPy library<span class="citation" data-cites="2020SciPy-NMeth"><sup>6</sup></span>, such as the local maximum algorithms. There is still work to be done in this space.</p>
<p>The current version of the code can be found here: <a href="https://framagit.org/jaj/ministan/-/blob/main/python/tci.py" class="uri">https://framagit.org/jaj/ministan/-/blob/main/python/tci.py</a></p>
<p>Here is an example code of a simulation of the Gepts Sufentanil model<span class="citation" data-cites="gepts_linearity_1995"><sup>7</sup></span>:</p>
<p>https://framagit.org/jaj/ministan/-/blob/main/python/sim_gepts.py</p>
<p>The code calculates infusion rates for three different effect site targets and determines the resulting plasma and effect site concentrations for each rate. To validate these results, the code also solves the differential equations directly, providing an independent calculation method alongside the closed-form solutions.</p>
<p><img src="https://jaj42.github.io/blog/posts/202508_stanpump/Figure_1.png" class="img-fluid"></p>
<p>The code could be coupled to a syringe pump control library such as InfuPy<span class="citation" data-cites="joachim_jona_infupy_2021"><sup>8</sup></span> to drive syringe pumps with the calculated rates. Of course this can only be used for research purposes and under no circumstances on real patients. See <a href="https://www.demed.be/Rugloop%20&amp;%20TCI%20news.htm#Background" class="uri">https://www.demed.be/Rugloop%20&amp;%20TCI%20news.htm#Background</a> for more information on this topic.</p>
</section>
<section id="emulation" class="level2">
<h2 class="anchored" data-anchor-id="emulation">Emulation</h2>
<p>STANPUMP can still be run today on modern hardware using <a href="https://www.freedos.org/">FreeDOS</a>, an open source reimplementation of MS-DOS. I have briefly tested that the STANPUMP binary downloaded from OpenTCI runs with FreeDOS. Running the real STANPUMP program in emulation and comparing the calculated infusion rates can provide an additional layer of validation of the algorithms.</p>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<div id="refs" class="references csl-bib-body">
<div id="ref-struys_history_2016" class="csl-entry">
<div class="csl-left-margin">1. </div><div class="csl-right-inline">Struys MMRF, De Smet T, Glen J(Iain)B, Vereecke HEM, Absalom AR, Schnider TW. The <span>History</span> of <span>Target</span>-<span>Controlled</span> <span>Infusion</span>. <em>Anesthesia &amp; Analgesia</em> [Internet] 2016 [cited 2025 Aug 19]; <strong>122</strong>: 56–69 Available from: <a href="https://journals.lww.com/00000539-201601000-00015">https://journals.lww.com/00000539-201601000-00015</a></div>
</div>
<div id="ref-nlmixr" class="csl-entry">
<div class="csl-left-margin">2. </div><div class="csl-right-inline">Fidler M, Wilkins J, Hooijmaijers R, et al. Nonlinear mixed-effects model development and simulation using nlmixr and related r open-source packages. <em>CPT: Pharmacometrics &amp; Systems Pharmacology</em> [Internet] Hoboken: John Wiley; Sons Inc.; 2019; <strong>8</strong>: 621–33 Available from: <a href="https://doi.org/10.1002/psp4.12445">https://doi.org/10.1002/psp4.12445</a></div>
</div>
<div id="ref-shafer_algorithms_1992" class="csl-entry">
<div class="csl-left-margin">3. </div><div class="csl-right-inline">Shafer SL, Gregg KM. Algorithms to rapidly achieve and maintain stable drug concentrations at the site of drug effect with a computer-controlled infusion pump. <em>Journal of Pharmacokinetics and Biopharmaceutics</em> [Internet] 1992 [cited 2025 Aug 19]; <strong>20</strong>: 147–69 Available from: <a href="http://link.springer.com/10.1007/BF01070999">http://link.springer.com/10.1007/BF01070999</a></div>
</div>
<div id="ref-bailey_simple_1991" class="csl-entry">
<div class="csl-left-margin">4. </div><div class="csl-right-inline">Bailey JM, Shafer SL. <a href="https://doi.org/10.1109/10.81576">A simple analytical solution to the three-compartment pharmacokinetic model suitable for computer-controlled infusion pumps</a>. <em>IEEE transactions on bio-medical engineering</em> 1991; <strong>38</strong>: 522–5 </div>
</div>
<div id="ref-harris2020array" class="csl-entry">
<div class="csl-left-margin">5. </div><div class="csl-right-inline">Harris CR, Millman KJ, Walt SJ van der, et al. Array programming with <span>NumPy</span>. <em>Nature</em> [Internet] Springer Science; Business Media <span>LLC</span>; 2020; <strong>585</strong>: 357–62 Available from: <a href="https://doi.org/10.1038/s41586-020-2649-2">https://doi.org/10.1038/s41586-020-2649-2</a></div>
</div>
<div id="ref-2020SciPy-NMeth" class="csl-entry">
<div class="csl-left-margin">6. </div><div class="csl-right-inline">Virtanen P, Gommers R, Oliphant TE, et al. <a href="https://doi.org/10.1038/s41592-019-0686-2"><span class="nocase"><span>SciPy</span> 1.0: Fundamental Algorithms for Scientific Computing in Python</span></a>. <em>Nature Methods</em> 2020; <strong>17</strong>: 261–72 </div>
</div>
<div id="ref-gepts_linearity_1995" class="csl-entry">
<div class="csl-left-margin">7. </div><div class="csl-right-inline">Gepts E, Shafer SL, Camu F, et al. Linearity of <span>Pharmacokinetics</span> and <span>Model</span> <span>Estimation</span> of <span>Sufentanil</span>. <em>Anesthesiology</em> [Internet] 1995 [cited 2025 Aug 23]; <strong>83</strong>: 1194–204 Available from: <a href="https://journals.lww.com/00000542-199512000-00010">https://journals.lww.com/00000542-199512000-00010</a></div>
</div>
<div id="ref-joachim_jona_infupy_2021" class="csl-entry">
<div class="csl-left-margin">8. </div><div class="csl-right-inline">Joachim J. <span>InfuPy</span> [Internet]. Zenodo; 2021 [cited 2021 Aug 16]. Available from: <a href="https://zenodo.org/record/5208192">https://zenodo.org/record/5208192</a></div>
</div>
</div>


</section>

 ]]></description>
  <category>pharmacometrics</category>
  <category>tci</category>
  <guid>https://jaj42.github.io/blog/posts/202508_stanpump/</guid>
  <pubDate>Mon, 18 Aug 2025 22:00:00 GMT</pubDate>
  <media:content url="https://jaj42.github.io/blog/posts/202508_stanpump/Screenshot_20250819_135400.png" medium="image" type="image/png" height="62" width="144"/>
</item>
<item>
  <title>RFLink 433 MHz RF Gateway</title>
  <dc:creator>Jona </dc:creator>
  <link>https://jaj42.github.io/blog/posts/201911_rflink/</link>
  <description><![CDATA[ 






<p><img src="https://jaj42.github.io/blog/posts/201911_rflink/IMG_20191024_171635.jpg" class="img-fluid"></p>
<p>In this blog post I would like to share my custom RFLink gateway built on top of the <a href="https://robotdyn.com/catalog/arduino/boards/matrix-led-8x8-module-32x32mm-driver-max7219-7221.html">RobotDyn Mega 2560 PRO</a> board. You can see the Mega 2560 PRO as an Arduino Mega clone using a more efficient board layout in order to achieve a smaller board size while still exposing all the relevant features of the microcontroller.</p>
<p>I designed a daughter board using KiCAD with the instructions from the <a href="http://www.rflink.nl/blog2/wiring">RFLink website</a> in order to place the RF parts. I used the Aurel RTX MID 5v transceiver which is recommended by the RFLink team. The fact that it contains receiver and transmitter on the same board simplifies the wiring and enables you to use only one antenna. You could however use any other 433 Mhz RF TX/RX components as described on the site.</p>
<p>Here is the full component list for this project:</p>
<ul>
<li>MEGA 2560 PRO Board</li>
<li>Custom PCB</li>
<li>100nF ceramic capacitor</li>
<li>10k resistor</li>
<li>Bi-directional logic level converter</li>
<li>SMA edge connector</li>
<li>433 Mhz SMA antenna</li>
</ul>
<p>The MEGA 2560 PRO board uses 3.3V logic levels internally and is not compatible with 5V logic, even though it is powered from 5V USB. It has an on-board LDO converter which provides 3.3V. This means it is not possible to directly hook up the Aurel RTX MID 5v transceiver which works on 5V. I added a <a href="https://www.sparkfun.com/products/12009">bi-directional logic level converter</a> to the design for this reason, in order to be able to get the devices to talk to each other. When looking around on the Internet, I saw that there is actually a 3.3V version of the Aurel RTX MID (called Aurel RTX MID 3v), which you could hook up directly. However, the 3.3V version appears to be even more difficult to find from resellers than the 5V version, so I went with the 5V version.</p>
<p>In order to program the Mega board, I used an AVR programmer. I went for the <a href="https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/ATAVRISP2">AVRISP mkII</a>. I don’t think this should be necessary since the board should come preflashed with the Arduino bootloader and you should be able to flash it directly over USB. Mine did not have an Arduino bootloader but this can be due to the fact that I tinkered with it in the past.</p>
<p>You need to download the <a href="http://www.rflink.nl/blog2/download">RFLink firmware</a> and extract the RFLink.cpp.hex file which contains the actual binary firmware. (Note that RFLink is not an open source project. The source code for the firmware is not available. They do provide the source code for an old version of the firmware though).</p>
<p>After you extracted the firmware, you can flash it directly over USB using the following command:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">avrdude</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> atmega2560 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> stk500v2 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-P</span> /dev/ttyUSBx <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-b</span> 115200 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-D</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-Uflash:w:RFLink.cpp.hex:i</span>   </span></code></pre></div>
<p>or you can use the AVRISP mkII programmer using this command:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">avrdude</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> atmega2560 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> avrispmkII <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-D</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> flash:w:RFLink.cpp.hex:i</span></code></pre></div>
<p>If you run on Windows, you can also use the GUI tool provided in the firmware archive.</p>
<p>My KiCAD project for the daughter board is available here : <a href="https://framagit.org/jaj/rflink-gateway">https://framagit.org/jaj/rflink-gateway</a>.</p>
<p>You can order the PCB directly from OSH Park here: <a href="https://oshpark.com/shared_projects/cp3NoWn5">https://oshpark.com/shared_projects/cp3NoWn5</a>.</p>
<p>Most parts and devices listed above can be found very cheap from Chinese resellers.</p>
<p>After you completed the board, it is possible to hook it up to home automation software over USB. At my place, I use it together with <a href="https://www.home-assistant.io/integrations/rflink/">Home Assistant</a> and a Raspberry Pi in order to control smart sockets.</p>
<p>Here is a view of the fully assembled board. Maybe at some point I will design a box for it.</p>
<p>Update August 2025: it’s been running flawlessly for 6 years. I haven’t designed a box yet.</p>
<p><img src="https://jaj42.github.io/blog/posts/201911_rflink/IMG_20191024_215427.jpg" class="img-fluid"></p>
<p>Links:</p>
<ul>
<li><p><a href="https://robotdyn.com/catalog/arduino/boards/matrix-led-8x8-module-32x32mm-driver-max7219-7221.html">https://robotdyn.com/catalog/arduino/boards/matrix-led-8x8-module-32x32mm-driver-max7219-7221.html</a></p></li>
<li><p><a href="http://www.rflink.nl/blog2/wiring">http://www.rflink.nl/blog2/wiring</a></p></li>
<li><p><a href="https://www.sparkfun.com/products/12009">https://www.sparkfun.com/products/12009</a></p></li>
<li><p><a href="https://oshpark.com/shared_projects/cp3NoWn5">https://oshpark.com/shared_projects/cp3NoWn5</a></p></li>
<li><p><a href="https://framagit.org/jaj/rflink-gateway">https://framagit.org/jaj/rflink-gateway</a></p></li>
</ul>



 ]]></description>
  <category>rf</category>
  <category>arduino</category>
  <category>pcb</category>
  <category>kicad</category>
  <guid>https://jaj42.github.io/blog/posts/201911_rflink/</guid>
  <pubDate>Thu, 28 Nov 2019 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Using the Nokia 6510 GSM modem over IrDA</title>
  <dc:creator>Jona JOACHIM</dc:creator>
  <link>https://jaj42.github.io/blog/posts/201107_gprs/</link>
  <description><![CDATA[ 






<p>So it looks like everybody has a smartphone nowadays, however I still use my Nokia 6510 on a daily basis. Like many phones back then, it has an IrDA (Infrared Data Association) interface which permits communication with the phone and I felt like playing with it a bit. For this I used a laptop with integrated IrDA interface, the OpenBSD operating system and the ppp tool that ships with it, the birda package and the smstools package. The ircomm tool that ships with birda lets you initiate an IrDA COMM connection with the phone and lets you attach a pseudo terminal to it:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ircomm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span> /dev/tty01 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> /dev/ptypz</span></code></pre></div>
<p>Here, /dev/tty01 is the actual IrDA interface that ircomm talks to and /dev/ptypz is a pseudo terminal it allocates that lets you talk to the GSM modem inside the device. The modem understands AT style commands. Actually you don’t talk directy to the modem but rather to some restricted modem emulation.</p>
<p>For more information see:</p>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Hayes_command_set#GSM" class="uri">http://en.wikipedia.org/wiki/Hayes_command_set#GSM</a></li>
<li><a href="http://wiki.openmoko.org/wiki/Hardware:AT_Commands" class="uri">http://wiki.openmoko.org/wiki/Hardware:AT_Commands</a></li>
<li><a href="http://wiki.openmoko.org/wiki/Manually_using_GSM" class="uri">http://wiki.openmoko.org/wiki/Manually_using_GSM</a></li>
<li><a href="http://wiki.openmoko.org/wiki/Manually_using_GPRS" class="uri">http://wiki.openmoko.org/wiki/Manually_using_GPRS</a></li>
</ul>
<p>I use the ppp(8) tool to talk to the modem but anything else will work. Here’s a first session:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">spaceman%</span> sudo ppp</span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Password:</span></span>
<span id="cb2-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Working</span> in interactive mode</span>
<span id="cb2-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Using</span> interface: tun0</span>
<span id="cb2-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Warning:</span> No default entry found in config file.</span>
<span id="cb2-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ppp</span> ON spaceman<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> set device /dev/ttypz</span>
<span id="cb2-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ppp</span> ON spaceman<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> term</span>
<span id="cb2-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">deflink:</span> Entering terminal mode on /dev/ttypz</span>
<span id="cb2-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Type</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">~?</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' for help</span></span>
<span id="cb2-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">ATE1</span></span>
<span id="cb2-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">OK</span></span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">RING</span></span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">RING</span></span>
<span id="cb2-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">ATA</span></span>
<span id="cb2-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">OK</span></span>
<span id="cb2-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">ATH</span></span>
<span id="cb2-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">OK</span></span>
<span id="cb2-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">ATD0952880000;</span></span>
<span id="cb2-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">OK</span></span>
<span id="cb2-22"></span>
<span id="cb2-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">NO CARRIER</span></span>
<span id="cb2-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">AT</span></span>
<span id="cb2-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">OK</span></span>
<span id="cb2-26"></span>
<span id="cb2-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">ppp ON spaceman&gt;</span></span></code></pre></div>
<p>Some explanations: “ATE1” enables echoing, which enables you to see what you type, this is not required. The phone responds with “OK” when it correctly processes a command. I then call the phone and the modem shows that a call is incoming with the “RING” signal. You can then accept the call with “ATA” or reject it with “ATH”. I accepted the call, talked a bit and then hung up using “ATH”. Then I called my home phone from the mobile phone using the ATD command. ‘D’ here stands for dialling and the command dials the number that follows the command. I then hung up from the home phone which the modem signals with “NO CARRIER”.</p>
<p>Here’s another session where I try to establish a GPRS connection for tethering. This unfortunately doesn’t work, I don’t really know why, probably the provider forbids it:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">ppp ON spaceman&gt; term</span>
<span id="cb3-2">AT+CGDCONT=1,"IP","gprs-service-fr.net"</span>
<span id="cb3-3">OK</span>
<span id="cb3-4">ATD*99#</span>
<span id="cb3-5">CONNECT</span>
<span id="cb3-6">ppp ON spaceman&gt; Warning: Sending empty PAP authname!</span>
<span id="cb3-7">Ppp ON spaceman&gt;</span>
<span id="cb3-8">PPp ON spaceman&gt; Warning: ff01:8::: Change route failed: errno: Network is unreachable</span>
<span id="cb3-9">Warning: ff02:8::: Change route failed: errno: Network is unreachable</span>
<span id="cb3-10">Warning: ff02:8::: Change route failed: errno: Network is unreachable</span>
<span id="cb3-11">ppp ON spaceman&gt;</span></code></pre></div>
<p>So here I first set the APN which is needed for GPRS, using the CGDCONT command, the value depends on your provider. Then I dial the special number *99#. The modem tries to establish the connection, which it signals with “CONNECT”. It then starts talking PPP (Point-to-Point Protocol). The ppp(8) tool detects the fact that PPP is now spoken and takes over to establish a PPP link, which unfortunately fails here. The number of capital ’P’s on the prompt show the state of the connection:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">ppp ON awfulhak&gt;               # No link has been established</span>
<span id="cb4-2">Ppp ON awfulhak&gt;               # We've connected &amp; finished LCP</span>
<span id="cb4-3">PPp ON awfulhak&gt;               # We've authenticated</span>
<span id="cb4-4">PPP ON awfulhak&gt;               # We've agreed IP numbers</span></code></pre></div>
<p>So, as you can see here, authentication is successful but we don’t get an IP address. When it fails, the phone beeps and shows the following error: “Subscribe to GPRS first”.</p>
<p>One final thing I wanted to play with is SMS. Writing SMSes manually using AT style commands is cumbersome, so I used the smstools package which comes with a daemon that does the dirty work of talking to the modem. I set it up to talk to the /dev/ptypz device. Once it runs you can send SMSes using the “sendsms” command line tool, for example:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">spaceman%</span> sendsms 33668360000 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Test Message'</span></span></code></pre></div>
<p>My phone number actually starts in “0668”. “33” is the international prefix of my country (France), so you get how you have to format the number.</p>
<p>Here is the log of the smsd daemon for this command:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb6-1">2011-02-07 17:06:58,5, smsd: Moved file /var/spool/sms/outgoing/send_qzxMhS to /var/spool/sms/checked</span>
<span id="cb6-2">2011-02-07 17:06:58,6, GSM1: I have to send 1 short message for /var/spool/sms/checked/send_qzxMhS</span>
<span id="cb6-3">2011-02-07 17:06:58,6, GSM1: Sending SMS from  to 33668360000</span>
<span id="cb6-4">2011-02-07 17:06:58,6, GSM1: Checking if modem is ready</span>
<span id="cb6-5">2011-02-07 17:06:59,7, GSM1: -&gt; AT</span>
<span id="cb6-6">2011-02-07 17:06:59,7, GSM1: Command is sent, waiting for the answer</span>
<span id="cb6-7">2011-02-07 17:06:59,7, GSM1: &lt;- OK</span>
<span id="cb6-8">2011-02-07 17:06:59,6, GSM1: Pre-initializing modem</span>
<span id="cb6-9">2011-02-07 17:06:59,7, GSM1: -&gt; ATE0+CMEE=1;+CREG=2</span>
<span id="cb6-10">2011-02-07 17:07:00,7, GSM1: Command is sent, waiting for the answer</span>
<span id="cb6-11">2011-02-07 17:07:00,7, GSM1: &lt;- OK</span>
<span id="cb6-12">2011-02-07 17:07:01,7, GSM1: -&gt; AT+CSQ</span>
<span id="cb6-13">2011-02-07 17:07:01,7, GSM1: Command is sent, waiting for the answer</span>
<span id="cb6-14">2011-02-07 17:07:01,7, GSM1: &lt;- +CSQ: 20,99 OK</span>
<span id="cb6-15">2011-02-07 17:07:01,6, GSM1: Signal Strength Indicator: (20,99) -73 dBm (Excellent), Bit Error Rate: not known or not detectable</span>
<span id="cb6-16">2011-02-07 17:07:01,6, GSM1: Checking if Modem is registered to the network</span>
<span id="cb6-17">2011-02-07 17:07:01,7, GSM1: -&gt; AT+CREG?</span>
<span id="cb6-18">2011-02-07 17:07:02,7, GSM1: Command is sent, waiting for the answer</span>
<span id="cb6-19">2011-02-07 17:07:02,7, GSM1: &lt;- +CREG: 2,1,"00D6","9C99" OK</span>
<span id="cb6-20">2011-02-07 17:07:02,6, GSM1: Modem is registered to the network</span>
<span id="cb6-21">2011-02-07 17:07:02,6, GSM1: Selecting PDU mode</span>
<span id="cb6-22">2011-02-07 17:07:02,7, GSM1: -&gt; AT+CMGF=0</span>
<span id="cb6-23">2011-02-07 17:07:03,7, GSM1: Command is sent, waiting for the answer</span>
<span id="cb6-24">2011-02-07 17:07:03,7, GSM1: &lt;- OK</span>
<span id="cb6-25">2011-02-07 17:07:03,7, GSM1: -&gt; AT+CMGS=18</span>
<span id="cb6-26">2011-02-07 17:07:04,7, GSM1: Command is sent, waiting for the answer</span>
<span id="cb6-27">2011-02-07 17:07:04,7, GSM1: &lt;- &gt;</span>
<span id="cb6-28">2011-02-07 17:07:04,7, GSM1: -&gt; 0011000B913366388639F90000FF04F4F29C0E</span>
<span id="cb6-29">2011-02-07 17:07:06,7, GSM1: Command is sent, waiting for the answer</span>
<span id="cb6-30">2011-02-07 17:07:10,7, GSM1: &lt;- +CMGS: 214 OK</span>
<span id="cb6-31">2011-02-07 17:07:10,5, GSM1: SMS sent, Message_id: 214, To: 33668360000, sending time 12 sec.</span>
<span id="cb6-32">2011-02-07 17:07:10,6, GSM1: Deleted file /var/spool/sms/checked/send_qzxMhS</span></code></pre></div>
<p>The message got delivered correctly. smsd is also able to receive incoming SMS, however I haven’t tried it and I’m not sure it works since the modem of this phone does not signal anything when it receives a message.</p>
<p>The birda package also includes some tools to use OBEX over IrDA. This lets you send and receive vCards with contacts (what Nokia calls “Business Cards”). For example, to send a vCard with a contact named “John” and phone number 06… to your phone you can use the following command:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mkobextel</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> John <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> 0668360001 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">irobex</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span> /dev/tty01</span></code></pre></div>
<p>Receiving vCards sent from the phone also works.</p>
<p>Have fun!</p>
<p>Update: I just add this here for the nostalgia</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb8-1">AT+CGMI</span>
<span id="cb8-2">Nokia Mobile Phones</span>
<span id="cb8-3"></span>
<span id="cb8-4">OK</span>
<span id="cb8-5">AT+CGMM</span>
<span id="cb8-6">Nokia 6510</span>
<span id="cb8-7"></span>
<span id="cb8-8">OK</span>
<span id="cb8-9">AT+CGMR</span>
<span id="cb8-10">V 04.12</span>
<span id="cb8-11">28-08-02</span>
<span id="cb8-12">NPM-9</span>
<span id="cb8-13">(c) NMP.</span>
<span id="cb8-14"></span>
<span id="cb8-15">OK</span></code></pre></div>



 ]]></description>
  <category>unix</category>
  <guid>https://jaj42.github.io/blog/posts/201107_gprs/</guid>
  <pubDate>Sun, 06 Feb 2011 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Neo Freerunner GPS as OpenBSD timedelta sensor</title>
  <dc:creator>Jona JOACHIM</dc:creator>
  <link>https://jaj42.github.io/blog/posts/201004_gps/</link>
  <description><![CDATA[ 






<p>I recently discovered the <a href="https://man.openbsd.org/nmea">nmea(4)</a> serial line discipline in OpenBSD which was written by Marc Balmer in 2008. This is a driver that can be attached to a serial device and which interprets NMEA 0183 data typically produced by GPS devices. It extracts time data (not position) from the GPS stream and makes it available through the OpenBSD sensors framework. This timedelta sensor can then be used by OpenNTPD to keep your clock in sync. Now I have a Neo Freerunner smartphone which comes with a GPS device that produces NMEA data and I wanted to test it out.</p>
<p>First of all on the phone side you have to power on the GPS device, for example like this:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> 1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /sys/class/i2c-adapter/i2c-0/0-0073/pcf50633-regltr.7/neo1973-pm-gps.0/power_on</span></code></pre></div>
<p>Then you need to transfer the GPS data from the phone to your OpenBSD machine and emulate a serial device that provides the data.</p>
<p>socat (net/socat) does a great job at this. On the phone side make sure GPSD is running and do something like the this:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">socat</span> EXEC:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpspipe -r"</span> TCP-LISTEN:31415</span></code></pre></div>
<p>alternatively you can talk to the raw device without GPSD like that:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">socat</span> /dev/ttySAC1,raw,echo=0,crnl TCP-LISTEN:31415</span></code></pre></div>
<p>Now on the computer side you need to attach this to a pseudo terminal:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">socat</span> TCP:192.168.0.14:31415 /dev/ptypa,raw,echo=0,crnl</span></code></pre></div>
<p>You should now be able to query the GPS device on your computer. Attach the nmea(4) discipline to the serial device using:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ldattach</span> nmea /dev/ttypa</span></code></pre></div>
<p>If everything worked fine you should see an nmea sensor come up which you can query using sysctl or systat for example.</p>
<p>Here’s my relevant output from systat:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb6-1">SENSOR                                          VALUE  STATUS  DESCRIPTION</span>
<span id="cb6-2">nmea0.percent0                                100.00%    OK    Signal</span>
<span id="cb6-3">nmea0.timedelta0                              2.237 s    OK    GPS autonomous</span></code></pre></div>
<p>To use this sensor with OpenNTPD you simply need to add the following to /etc/ntpd.conf:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb7-1">sensor nmea0</span></code></pre></div>
<p>ntpd is opportunistic about the timedelta sensors, meaning it will use them when they are available but will run just as smooth when they are not.</p>
<p>Here’s some ntpd output:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb8-1">sensor nmea0 added (weight 1, correction 0.000000, refstr HARD)</span>
<span id="cb8-2">sensor nmea0: offset -2.236736</span></code></pre></div>
<p>I advise you to read the relevant man pages to get a better understanding of the process.</p>



 ]]></description>
  <category>unix</category>
  <guid>https://jaj42.github.io/blog/posts/201004_gps/</guid>
  <pubDate>Sun, 25 Apr 2010 22:00:00 GMT</pubDate>
</item>
<item>
  <title>xterm, zsh, spawn-new-terminal, *BSD</title>
  <dc:creator>Jona JOACHIM</dc:creator>
  <link>https://jaj42.github.io/blog/posts/201002_zsh/</link>
  <description><![CDATA[ 






<p>xterm defines a very convenient action called spawn-new-terminal(). Using that action you can duplicate your current terminal and obtain a shell in your current working directory even if you’re inside a program like vim or mutt.</p>
<p>From the man page:</p>
<pre><code>   spawn-new-terminal(params)
           Spawn  a  new xterm process.  This is available on
           systems which have a modern version of the process
           filesystem, e.g., "/proc", which xterm can read.

           Use the "cwd" process entry, e.g., /proc/12345/cwd
           to obtain the working  directory  of  the  process
           which is running in the current xterm.</code></pre>
<p>You can bind this action to a key using Xresources. For example I bind the action to Alt-n.&nbsp;Here’s the relevant part from my .Xdefaults:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">xterm*VT100.translations: #override \n\</span>
<span id="cb2-2">        Meta &lt;Key&gt;n:spawn-new-terminal()</span></code></pre></div>
<p>The problem is that on *BSD you don’t have a procfs, at least not one that looks like the one on Linux.</p>
<p>So to actually get this working, xterm needs another way to find out the current working directory (CWD) of the shell that runs inside of it. I found out that this is not so easy and after some tinkering I decided to go for a dirty hack. The idea is, if I can’t find out the cwd of a zsh process on my own then perhaps I can ask zsh gently to tell it.</p>
<p>Zsh, like any other shell, lets you define functions, however certain functions have a special meaning for zsh: they define hooks. We use 2 hooks here: chpwd(), called whenever the CWD of zsh changes, and zshexit(), called when the shell quits.</p>
<p>Here are the relevant parts from my .zshrc:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"> chpwd()</span></span>
<span id="cb3-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${PWD}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${HOME}</span>/.zsh/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${PPID}</span>.pwd</span>
<span id="cb3-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#call chpwd once on startup</span></span>
<span id="cb3-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">chpwd</span></span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"> zshexit()</span></span>
<span id="cb3-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${HOME}</span>/.zsh/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${PPID}</span>.pwd</span>
<span id="cb3-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span></code></pre></div>
<p>Now for the xterm part. The relevant function is HandleSpawnTerminal() in misc.c. Here’s my modified version:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb4-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;sys/types.h&gt;</span></span>
<span id="cb4-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;pwd.h&gt;</span></span>
<span id="cb4-3"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;unistd.h&gt;</span></span>
<span id="cb4-4"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;limits.h&gt;</span></span>
<span id="cb4-5"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;err.h&gt;</span></span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* ARGSUSED */</span></span>
<span id="cb4-8"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span></span>
<span id="cb4-9">HandleSpawnTerminal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Widget w GCC_UNUSED<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-10">            XEvent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> event GCC_UNUSED<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-11">            String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> params<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-12">            Cardinal <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>nparams<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> zshdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".zsh"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-15">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> termpath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xterm"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-16"></span>
<span id="cb4-17">    pid_t pid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> forkpid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-18">    uid_t uid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> passwd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>passwd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-20"></span>
<span id="cb4-21">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> pathname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>_POSIX_PATH_MAX<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb4-22">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> zshcwd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>_POSIX_PATH_MAX<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb4-23"></span>
<span id="cb4-24">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-25">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">FILE</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>fp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-26"></span>
<span id="cb4-27">    pid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> getpid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb4-28"></span>
<span id="cb4-29">    uid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> geteuid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb4-30">    passwd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> getpwuid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>uid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-31">    home <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> passwd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pw_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-32"></span>
<span id="cb4-33">    snprintf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>pathname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span> pathname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%s</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%s</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%ld</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.pwd"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> zshdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>pid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-34"></span>
<span id="cb4-35">    fp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fopen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>pathname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>fp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-37">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-38">        warn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"couldn't open </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%s</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> pathname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-39">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-40">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-41">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>fgets<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>zshcwd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span> zshcwd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> fp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-42">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-43">        warn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"couldn't read from </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%s</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> pathname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-44">        fclose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>fp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-45">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-46">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-47"></span>
<span id="cb4-48">    fclose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>fp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-49"></span>
<span id="cb4-50">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* The reaper will take care of cleaning up the child */</span></span>
<span id="cb4-51">    forkpid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fork<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb4-52">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>forkpid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-53">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-54">        warn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Could not fork"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-55">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-56">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-57">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>forkpid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-58">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-59">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* We are the child */</span></span>
<span id="cb4-60">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>chdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>zshcwd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-61">            err<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"could not chdir to </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%s</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> zshcwd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-62"></span>
<span id="cb4-63">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> myargc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>nparams <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-64">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>myargv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TypeMallocN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*,</span> myargc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-65">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-66"></span>
<span id="cb4-67">        myargv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> termpath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-68"></span>
<span id="cb4-69">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> myargc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-70">            myargv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>params<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb4-71">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-72"></span>
<span id="cb4-73">        myargv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-74">        execvp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>termpath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> myargv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-75"></span>
<span id="cb4-76">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* If we get here, we've failed */</span></span>
<span id="cb4-77">        err<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"exec of '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%s</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> termpath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-78">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-79">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* We are the parent</span></span>
<span id="cb4-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">         * we just live our life */</span></span>
<span id="cb4-81">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-82"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>Now you just have to reconfigure xterm with –enable-exec-xterm and build it.</p>



 ]]></description>
  <category>unix</category>
  <guid>https://jaj42.github.io/blog/posts/201002_zsh/</guid>
  <pubDate>Tue, 09 Feb 2010 23:00:00 GMT</pubDate>
</item>
</channel>
</rss>
